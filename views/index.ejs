<!DOCTYPE html>
<html>
<head>
	<title><%= title %></title>
	<link rel='stylesheet' href='/stylesheets/style.css' />
	<script src="/scripts/vendor/jquery-1.8.2.min.js"></script>
	<script src='/scripts/vendor/d3.v3.min.js'></script>
	<script src="/socket.io/socket.io.js"></script>
	<script type="text/javascript">

	$(function() {

		var socket = io.connect('http://localhost');
		socket.on('vehicle', function (data) {
		  console.log(data);
		  socket.emit('my other event', { my: 'data' });
		});

		var width = parseInt($(document).width(), 10),
		height = parseInt($(document).height(), 10),
		minArea = 1;

		var svg = d3.select("#map").append("svg")
		.attr("width", width)
		.attr("height", height);

		var area = d3.select("#area");

	  //var shape = svg.append("path");

	  var projection = d3.geo.albers().scale(1).translate([0,0]);

	  var path = d3.geo.path()
	  	.projection(projection);



	  $.getJSON("/data/us_counties.json", function (data) {

	  	var sf_county = data.features[1545];

			// Compute the bounds of a feature of interest, then derive scale & translate.
			var b = path.bounds(sf_county),
					s = (0.95 / Math.max((b[1][0] - b[0][0]) / width, (b[1][1] - b[0][0]) / height))*140,
					t = [(width - s * (b[1][0] + b[0][0])) / 2, (height - s * (b[1][1] + b[0][1])) / 2];
		  projection.scale(s).translate(t);

			// var ca = svg.append("g").attr("class", "ca");

			// ca.append("path")
	  //   .datum(data)
	  //   .attr({
			// 	"d": path,
			// 	"class": function (d) {
			// 		return "class"
			// 	}
			// });

			// ca.selectAll("path")
			// 	.data(data.features)
			// 	.enter()
			// 	.append("path")
			// 	.attr({
		 //  		"d": path,
		 //  		"class": function (d) {
		 //  			return d.properties.NAME
		 //  		}
		 //  	});

		  	getSF();
	  });

	  var getSF = function () {
		  var urls = ['neighborhoods', 'streets', 'arteries', 'freeways'];
			var jxhr = [];
			var json = [];
			$.each(urls, function (i, url) {
			    jxhr.push(
			        $.getJSON("/data/"+url+".json", function (data) {
			            json.push({data: data, type: url});
			        })
			    );
			});
			$.when.apply($, jxhr).done(function() {
			    draw(json, urls);
			});
	  };

		var draw = function (json, urls) { // Ensure that SVG layers are drawn in the correct order
			for (var i = 0; i < urls.length; i++) {
				var data = json.filter(function (e) {
					return e.type === urls[i];
				});
				//if (data[0].type == 'neighborhoods') {
					var g = svg.append("g").attr("class", data[0].type);
					g.selectAll("path")
						.data(data[0].data.features)
						.enter()
						.append("path")
						.attr({
				  		"d": path
				  	});
				//}
			}; // !for
		}; // !draw

	});

</script>
</head>
<body>

	<div id="map" style="position: absolute; top: 0; left: 0"></div>

</body>
</html>
